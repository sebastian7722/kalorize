{
  "id": "cb3a2397-2693-4bd9-90f8-d94a18e654ef",
  "prevId": "5b23138d-99bc-404e-8cab-f5c02df9f272",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.food": {
      "name": "food",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "calories": {
          "name": "calories",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "totalProtein": {
          "name": "totalProtein",
          "type": "numeric(5, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "totalCarbs": {
          "name": "totalCarbs",
          "type": "numeric(5, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "sugars": {
          "name": "sugars",
          "type": "numeric(5, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "fiber": {
          "name": "fiber",
          "type": "numeric(5, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "totalFat": {
          "name": "totalFat",
          "type": "numeric(5, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "saturatedFat": {
          "name": "saturatedFat",
          "type": "numeric(5, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "transFat": {
          "name": "transFat",
          "type": "numeric(5, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "monounsaturatedFat": {
          "name": "monounsaturatedFat",
          "type": "numeric(5, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "polyunsaturatedFat": {
          "name": "polyunsaturatedFat",
          "type": "numeric(5, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "cholesterol": {
          "name": "cholesterol",
          "type": "numeric(5, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_oauth_accounts": {
      "name": "user_oauth_accounts",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_oauth_accounts_userId_users_id_fk": {
          "name": "user_oauth_accounts_userId_users_id_fk",
          "tableFrom": "user_oauth_accounts",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "user_oauth_accounts_providerAccountId_provider_pk": {
          "name": "user_oauth_accounts_providerAccountId_provider_pk",
          "columns": [
            "providerAccountId",
            "provider"
          ]
        }
      },
      "uniqueConstraints": {
        "user_oauth_accounts_providerAccountId_unique": {
          "name": "user_oauth_accounts_providerAccountId_unique",
          "nullsNotDistinct": false,
          "columns": [
            "providerAccountId"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_sessions": {
      "name": "user_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "expiresAt": {
          "name": "expiresAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_sessions_userId_users_id_fk": {
          "name": "user_sessions_userId_users_id_fk",
          "tableFrom": "user_sessions",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "user_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'user'"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_unique": {
          "name": "users_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.oauth_provider": {
      "name": "oauth_provider",
      "schema": "public",
      "values": [
        "google"
      ]
    },
    "public.user_role": {
      "name": "user_role",
      "schema": "public",
      "values": [
        "admin",
        "user"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}